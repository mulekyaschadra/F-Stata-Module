[["index.html", "Stata-Support de formation About", " Stata-Support de formation Mulekya Schadra 2022-06-24 About Ce document est écrit comme support de formation dans le logiciel STATA. une formation rélisé pour le Docteur Franc Lutu. Nous ne prétendons pas aborder toutes les connaissances disponibles dans STATA, neanmoins nou proposons les compétences éssentieles dans les aspects danalyse des données. Nous nous basons sur la comprehension progressive. ce sont les bases qui determinent la comprehension des notions suivantes. ` ce livre est téléchargeable en format pdf ,sur le compte Github ci-sessous https://github.org/mulekya_schadra/. `Ce support est écrit dans le cadre dapprentissage du logiciel STATA, dans ce livre, les chapitres sont organisées de manière à inculter une certaine compétence dans lanalyse des donnes Ce cours est reparti dans 5 chapitres, concernat les aspects de base du logiciel avec hierarchie "],["pries-en-main-du-logiciel.html", "Chapter 1 Pries en main du logiciel 1.1 Présentation de linterface 1.2 Definition de lespace de travail 1.3 fenetres aditionnelles de Stata 1.4 importation de la base des données 1.5 Fichier do (do-file)", " Chapter 1 Pries en main du logiciel le logiciel est un programme de lentreprise staa utilisé dans le domaine de léconomie et de léconométrie dans le cadre danalyse des données. Ce logiciel est manipulable sous deux angles : Interface graphique ; Intgerface de commande cette aspect des chose rend le logiciel Stata fléxible quand aux éxigences du moment: la reproductibilité du travail dans l'analyse des données 1.1 Présentation de linterface Voici comment resemble linterface Stata à louverture du programme: Presentation de linterface Stata 4 fenetres principales dont : La visionneuse des resultats La partie Commande la Vue des variables Lhistorique des commandes exécutées. Le visionneuse des resultats sert à visualiser les résultats après exécution dune quelconque tâche dans le cadre du travail sous Stata La partie Commande est la partie où on entre du code dans la syntax appropriée à stata, et selon la tâche que lon souhaiterais éxécuter La partie vue des variables quand à elle, sert à montrer le nom des variables contenues dans la base des données et leurs caractéristiques tel que: le type des variables, leur format, les label. Les autres details sont affciché dans la fenêtre juste en bas: la partie propriété des variables La fênetre history quand à elle, sert montre lensemble des codes exécutées dans la sessions Stata dépuis le début du travail. à part ces interfaces, nous avons la base à outils et la bare des menus dans stata. Avec exécution que ce soit par lutilisation de lintrerface graphique ou de la partie commande, tout travail passe par linvité de commande. Stata étant un logiciel dédié à lanalyse des données nous allons passer direcetement par la partie qui consiste à charger une base des données dans le mémoire Stata: Importation. 1.2 Definition de lespace de travail En anglais working direcrorie est le dossier de lecture et décriture dun programme par défaut. Pour toute session de stata, le repertoire (directory) est les dossier mes documents. celui-ci est changé par la commande cd pour signifier change directorie et suivi du chemin daccès complet à ce repertoire. pour connaitre le chemin daccès est un repertoire donnée, il suffit de se selectionner ce dossier et de faire menu contextuelle tout en appuyant le bouton shift du clavier et choisir loption copier en tant que chemin daccès et ensuite coller dans stata après le mot clé cd. # cd &quot;E:\\ MES CONSULTANCES\\Dr Franck\\Stata Learning&quot; pour spécifier le # dossier *Stata learning comme repoirtoire de travail pour la # session stata. Changer les *\\* en */*. Exemlple: cd \"E:/MES CONSULTANCES/Dr Franck/Stata Learning\" pour spécifier le dossier *Stata learning comme repoirtoire de travail pour la session stata. 1.3 fenetres aditionnelles de Stata Data editor / Data browser pour visualiser les données chargée dans la mémoire sous forme de tableau de manière à faciliter leurs lectures comme sil sagissait dun tableaur (excel par exemple). Data bowser est différent de data editor dans ce ses que ce premier permet de visualiser les données sans possibilité de modification, tandis que la le data editor quand à lui offre des possibilité de modification comme dans un tableur classique. Graph editor: pour visualiser les graphiques tracés dans stata, en permettant une certaine modification des élèments graphiques tel que le titre, le titre des axes, la vouleur des textes ,  Variable manager qui permmet de visualiser et même des modofier les propriétes des variables contenue dans la base des données stata help : pour voir laide sur différentes opérations sous stata Ainsi donc, les points 1,2 et 4 font parti des fenêtres du type viewer dans stata. 1.4 importation de la base des données Stata offre plusieures possibilitées de lire les bases des données provenant de plusieures sources externes sont excel, spss, sas,csv, . lextention des bases des données propre à stata sont les fichiers .dta. pour importer une base des données sous stata, il faut utiliser la fonctiuon import avec lextention (ou le type) du fichier à partir duquel on souhaite importer le jeu des données. pour un fichier excel: import excel avec le chemin daccès complet du fichier, écrit sous forme de caractète . pour un fichier spss, la comande a comme mot clé import ainsi de suite Dans le cadre de ce cours nous allons plus utiliser les fichiers venant de lexcel. Ainsi donc, nous exploiterons plus la fonction import excel et les différents arguments qui viennent avec. Specifier la feuille qui contient nos données spécifier les noms des variables à la première ligne ou pas spécifier si toutes les données sont importées comme des chaines des caractères ou pas. A limportation des données sous stata, i, y a des options à spécifier selon les caractéristiques de la base des données à importes : - La position des noms des variables : firstrow si ces noms se trouvent à la premeière ligne; - La feuille spécifique dans lequelle se trouve le jeu des donnnées: sheet(nom de la feuille) pour spécifier le noms de la feuille. Pour un fichier Excel voici la commande Spécifiant les différentes options : import excel \"Compi_Cohortes.xlsx\", firstrow sheet(Cohorte_HM_0905) Ici, il sagit dilporter les données du fichier excel Compi_Cohortes.xlsx dont les nom des variables se trouvent sur la première ligne, et le jeu des données dans la feuille Cohorte_HM_0905. 1.5 Fichier do (do-file) Le dofile est est dichier dans lequel sont stockés les différentes commandes des stata, que lon pourra exécuter plus tard , au besoin, pour des raisons de continuité et de reproductibilité du travail danalyse des données. Notons que kon peut choisir dutiliser stata par son interface graphique que par sa partie commande. Note Le dofile est exécuté en entier en cliquant sur longlet do et en utilisant la raccouci clavier ctrl+ D (pour signier do:faire ou executer)et par ligne des commandes en utilisant le raccouci clavier Ctrl+Alt+D . "],["data-cleaning.html", "Chapter 2 Data CLeaning 2.1 Introduction 2.2 Les commandes de base", " Chapter 2 Data CLeaning 2.1 Introduction Pourquoi manipuler les données en Stata et pas en Excel ? La raison est simple : pas mal des commandes que lon va voir ci-dessous existent aussi en Excel et sont certes quelquefois plus simples (si on arrive à les trouver), mais par contre on perd vite le fil de ce que lon a fait subir aux données avant de passer à lestimation, et cest parfois là que se cachent soit les quelques erreurs à lorigine de résultats grotesques soit, au contraire, les mauvais traitements infligés aux chiffres pour obtenir le résultat désiré. Avec Stata, on peut garder la trace de toutes les manipulations dans le do-file. Celui-ci doit contenir toutes les commandes permettant de passer du fichier-données brut à celui qui est prêt à lestimation. Il est alors facile de retrouver lerreur qui tue ou bien de vérifier ce que les chiffres ont subi entre les mains du bourreau avant davouer. La manipulation des données sous stata consiste à Typage des variable remplaceme nt des valeurs manquantes remplacement de certaines variables sous certaines conditions codification des variable recodage des variables Ainsi, dans uune base des donénes, avant de commencer le nettoyage de la base des donnée sil surffit davoir une vue gloobale sur cette base en conaissant les caractéristiques générales de différnetes variables contenues dans la base des données. Ainsi, nous utilisons les commandes suivantes : describe : permet de décrire toutes les variables de la base des données chargée en mémoire. il nous amène en sortie: le nombre des observation, le nombre des variables, les noms des variables , les labeks et les types de chaque variable sous forme de tableau. //Avec les options short pour affichier le nom des variables, simple pour affcicher le nombre des variables et le nombre dobservations dans la BD. codebook pour voir les différentes ecaractéristiques des variables dans la base des données. utiliser codebook suivi du nom de la variable pour ne voir que les caractéristiques dune seule variable ou une liste des variables. Visualisation de la BD sous forme de tableau browse pour affcicher uniquement; edit pour pouvoir modifier manuellement les valeurs dans la base. 2.2 Les commandes de base 2.2.1 La synthaxe des commandes stata Stata comme tous les logiciels, utilise un langage qui nest ni de langlais, ni du français, mais son propre langage. Certes, les mots sont empruntés à la langue de Shakespeare, mais la syntaxe na rien à voir avec langlais. Hormis quelques exceptions, la syntaxe des commandes de Stata est: [by listevar:] commande [listevar] [=exp] [if exp] [in intervalle] [pondération] [, options] Le nom de la commande est évidemment obligatoire, et il peut éventuellement être précédé dun préfixe by, et le plus souvent il est suivi dun ou de plusieurs suffixes. Dans le cas de commandes particulièrement usuelles, il peut parfois être abrégé, comme par exemple pour describe. Les suffixes sont entourés de crochets pour indiquer leur caractère optionnel: listevar correspond à une liste de variables, exp à une expression logique, intervalle à une série dobservations dans le fichier de données, et pondéra t i on à une expression indiquant la variable et le mode de pondération des données. Enfin, après une virgule, on peut ajouter une ou plusieurs options pour lexécution de la commande. La syntaxe complète pour chaque commande figure dans les manuels de référence de Stata, qui restent de ce point de vue irremplaçables. Mais puisque le préfixe by et les suffixes if, in et la pondération sont communs à la majorité des commandes, nous nous en tiendrons dans les chapitres suivants à exposer la syntaxe de base qui prend la forme: commande [listevar] [=exp] [, options] Immédiatement après le nom de la commande, une liste de variables indique sur quelles variables doit seffectuer la commande. Pour explorer le fichier « census.dta », on tapera: list state region pop Le préfixe by permet dexécuter la commande pour chaque sous-ensemble dobservations défini pour chaque valeur de listevar. Avant dexécuter la commande, le fichier doit dabord être trié (avec la commande sort listevar) selon la même variable utilisée par le préfixe by. Par exemple, on aura: Le suffixe [in intervalle] Le suffixe in est moins courant dans la pratique, car il suppose de bien connaître lordre dans lequel sont classées les observations du fichier. TI permet dexécuter la commande pour certaines observations, par exemple: sort region by region: list region state pop medage Le suffixe [if exp] Le suffixe if restreint lexécution de la commande au sousensemble des observations pour lesquelles lexpression logique exp est vraie, cest-à-dire différente de la valeur O. Nous reviendrons dans la section consacrée aux calculs sur la manipulation de ces expressions logiques, dites encore booléennes. Pour lheure, un exemple suffit à comprendre le fonctionnement de ce suffixe: On préférera toujours sélectionner un sous-ensemble dobservation avec le suffixe if en fonction de variables bien connues et qui font sens, plutôt que de se fier à un ordre arbitraire des observations dans le fichier. 2.2.2 Les commandes de depart cd pour spécifier le repertpoire de travail dans stata. Ex: cd c:/path/directory import : charger la base des donnes dans la mémoire. Suivi de type des fichier. et le chemin daccès du fichier; clear vide la mémoire use au lieu de mettre tout le sentier. Ne pas oublier de mettre les guillemets comme ils sont (noter le sens !). save La commande save datafile1.dta est très importante : elle sauvegarde le fichier-données (.dta) modifié par le programme sous un autre nom que le fichier initial, ce qui permet de laisser ce dernier intouché. Sinon on altère le fichier initial de façon permanente, ce qui est en général un désastre. - De façon générale, les guillemets (comme dans cd c:/path/directory) sont obligatoires quand les noms spécifiés ne sont pas liés en un seul mot ; par exemple, Stata comprend use le nom que je veux.dta mais pas use le nom que je veux.dta. Describe pour decrire la base des données 2.2.3 Creation et correction des variables La commande rename La commande rename (abrégée en ren) permet de changer le nom de la variable qui suit. Sa syntax est rename ancien_non nouveau_nom Les commandes generate et replace La commande generate crée de nouvelles variables. Elle a la syntaxe de base suivante: [by listevar:] generate var = exp[if exp] [in intervalle] La commande replace utilise la même syntaxe, sauf quelle sapplique aux variables déjà existantes. Comme on le voit, cette syntaxe est simple, ce qui nest pas le cas de la forme que peut prendre exp. La première expression exp (après le signe =) spécifie le contenu de la variable, cest-àdire le plus souvent une valeur numérique. La seconde expression exp (après if) doit être formulée comme une expression logique dont le résultat est soit vrai soit faux: la création (ou le remplacement) de la variable est restreint aux observations pour lesquelles le résultat de lexpression est vrai. Cela na lair de rien, mais la confusion entre les deux expressions est certainement lerreur la plus fréquente que peuvent faire les utilisateurs de Stata. Les commandes tostring et destring ces commandes permettent de modifier le types des variables en string ou de modifier les string ne contenant que des caractères numériques en variables numériques. la commande _tostring*_ permet de mettre tous les caractètes de la base des données en chaines des caractères (strings) avec une ligne des codes. Les opérateurs etbexpressions logiques dans Stata Les opérateurs arithmétiques de Stata sont bien classiques: + (addition), - (soustraction), * (multiplication), 1 (division), A (puissance), tout comme les opérateurs relationnels &gt; (supérieur), &lt; (inférieur), &gt;= (supérieur ou égal), &lt;= (inférieur ou égal). Cest peut-être moins le cas des opérateurs relationnels == (égal) ou -= (différent, que lon peut écrire aussi! =), et des opérateurs logique &amp;. (et), 1 (ou bien), et - (non). En effet, Stata distingue le signe = (affectation dune valeur) du signe == (égalité entre deux valeurs). Dans le cas dune affectation dune valeur à une variable, la variable apparaît à gauche du signe = tandis que la valeur affectée apparaît à droite: Les expressions logiques sont particulièrement utiles pour créer des variables dichotomiques, cest-à-dire qui ne prennent que deux valeurs, 0 et 1. En effet, une expression logique, cest-àdire une expression où interviennent les opérateurs relationnels &gt;, &lt;, &gt;=, &lt;=, ==, -=, !=, ou bien les opérateurs logiques &amp;., 1, et -, est codée 1 lorsque son résultat est vrai, et codée 0 lorsque son résultat est faux. La commande tabulate possède une option generate ( ) bien pratique pour créer une série de variables dichotomiques à partir dune variable polytomique. Exécutez la série de commandes: Gestions des dates et Formatage des variables La commande drop et la commande keep Pour travailler sur une base de données pratique en vue des objectifs que vous avez, il sera peut-être néecessaire de supprimer les variables inutiles ou les observations non concernées par vos estimations. La variable keep vous permet de garder et drop de jeter facile, non ? On les utilise alternativement selon le nombre de variables àgarder ou àjeter. keep age salaire pays marital drop age15 salred salaire150 fdsrt azerty Definir les labels des variables et des valeurs Avec les observations et les commandes logiques, il est possible de préciser ce que lon veut effacer en le conditionnant à la valeur dautres variables. Par exemple, on garde les plus de 15 ans : keep if age&gt;=15 ou bien on supprime les individus nés en 1945 et 1968 : drop if naissance==1915 | naissance==1968 Les commandes sort et by La commande sort (abrégée en so) classe les données par ordre croissant. Il est possible de préciser les variables selon lesquelles le classement peut être e®ectué : sort sexe age Cette commande va classer les observations par sexe (dabord les femmes en numéro 0 et puis les hommes en numéro 1, par exemple) puis au sein de chaque sexe par age (les femmes et les enfants dabord). On peut utiliser la commande gsort pour e®ectuer des classements dans des ordres croissant ou décroissant. Un + ou un - vient donner le sens du classement au sein de chaque variable. sort sexe -age Cela classe dabord par sexe puis par ^age décroissant (les femmes et les vieux dabord). Le processus by  : qui doit suivre obligatoirement un classement avec sort permet duti- liser la plupart des commandes pour chaque valeur de la variable indiquée par by. Les exemples suivants vont vous aider à comprendre le principe : 2.2.4 Combiner différentes bases de données : append et merge Pour travailler de façon éfficace, il faut souvent réunir difféerentes bases de données. Selon le type de combination, on va utiliser une commande différennte. Ajouter des observations Si vous disposer par exemple de données sur lemploi dans différents pays et que vous avez une base de donnée par pays avec les mêmes variables (emploi, salaire, temps de travail), alors vous souhaitez ajouter des observations (rajouter des lignes). Votre premier soin est de créer une variable pays dans chaque base de donnée en indiquant pour toutes les observations de ce pays le même nom ou code. Ensuite vous pouvez utiliser la commande append de la façon suivante : Ajouter des variables Si vous souhaitez ajouter des variables, alors il faudra utiliser la commande merge. Par exemple, vous avez deux bases de données sur entreprise (les mêmes entreprises) et lune donne des informations sur la production et lautre sur les salariés. Si vous voulez calculer la productivité de ces entreprises, il faudra combiner ces deux bases. La procédure est légèrement plus complexe quavec append. Etant donné que certaines variables sont communes aux deux bases (au moins lidentifiant des entreprises), il faut classer ces variables avec sort dans les deux bases pour permettre au logiciel de faire la bonne fusion. La commande merge crée la variable merge qui permet de vérfier que la fusion a été réalisée comme voulu. Elle peut prendre trois valeurs : - Les observations de la base principale nont pas été retrouvées dans la base ajoutée (celle aprµes using) - Les observations de la base ajoutée nont pas été retrouvées dans la base principale - Les observations dans les deux bases ont été retrouvées et connectées. Il faut toujours véri¯er que lopération sest bien déroulée en regardant si merge prend des valeurs différentes de 3. Si ce nest pas le cas alors regardez pour quelles observations lopération na pas fonctionné. "],["analyse-univarié-bivariée-et-graphiques.html", "Chapter 3 Analyse Univarié, Bivariée et Graphiques 3.1 Analyses univariées et bivariées 3.2 Indroduction aux graphiques sous Stata", " Chapter 3 Analyse Univarié, Bivariée et Graphiques Avant de mener des analyses à laide de modèle de régression et autres statistiques complexes, il est préférable de tirer le maximum de lexploration des données et de statistiques simples. Cela a deux avantages: permettre de mieux connaître les données et donc de repérer leurs particularités et leurs éventuelles incohérences, ce qui pourra servir pour des analyses statistiques plus approfondies; permettre de sélectionner des indices et des graphiques simples qui rendent le mieux compte des données afin de les restituer à un large public: les connaissances en statistique de la plupart des mortels ne dépassent guère le pourcentage, et de toute façon, même un public de spécialistes ne retiendra en définitive que les indices et les graphiques les plus simples. Stata offre de nombreuses commandes pour lanalyse exploratoire des données, autant sous forme de tableaux que de graphiques. Comme dans les chapitres précédents, nous utiliserons le fichier « census.dta » pour illustrer ces commandes. 3.1 Analyses univariées et bivariées La commande codebook permet de faire le tri à plat de la base des données en montrant les sttatisques simples et univariées. Et montre toute les informations nécéssaires à la compréhention de la structure dune variable. La commande summarize listvar permet aussi de résumer la distribution, en particulier pour les variables numériques continues. Cela naurait pas grand sens, par exemple, de calculer la moyenne dune variable discrète. Loption detail pennet une description plus precIse des variables continues, incluant les pourcentiles, les quatre plus grandes (Largest) et plus basses (Smallest) valeurs, ainsi quun indice de dissymétrie (la valeur de Skewness est °pour la distribution nonnale) et de concentration (la valeur de Kurtosis est de 3 pour la distribution normale. À linverse de la commande swmnarize, la commande tabulate est utile pour les variables discrètes. On remarque avec loption nolabel (pour afficher les codes plutôt que les libellés), que les régions sont classées selon leur numéro de code: 3.1.1 Tableaux croisés à deux variables La commande tabulate devient vraiment intéressante pour croiser les distributions de deux variables discrètes. La syntaxe de base de cette commande est: tabulate varligne varcol[, cell column row missing nofreq wrap nolabel chi2 exact gamma lrchi2 iaub v] Les modalités de la première variable citée figurent en ligne, tandis que les modalités de la deuxième apparaissent en colonne. Des options permettent dobtenir les pourcentages en ligne (row) , en colonne (column) ou par cellule (cell) du tableau: Pour afficher les pourcentages sans les fréquences, on utilisera loption nofreq. Tableaux croisés à trois variables Le préfixe by listvar est utilisé pour produire des tableaux croisés à deux variables pour chaque combinaison des modalités des variables énumérées dans listvar. Si une seule variable est énumérée dans listvar, on obtient un tableau croisé à trois variables, si deux variables sont énumérées, un tableau croisé à quatre variables, etc. Le préfixe by nécessite un tri préalable selon les variables énumérées: sort actif by urbain: tabulate actif region, all exact Loption summarize (var) est une alternative au préfixe by pour obtenir le croisement de trois variables, ou plutôt le résumé dune troisième variable dans les cases dun tableau croisant deux variables. Par exemple, si lon veut obtenir la population moyenne par États dans chacune des régions selon leur caractère urbain ou rural, on exécutera: tabulate urbain region, summarize(pop) nostandard On a ajouté loption nostandard pour éviter le calcul des écarts types (standard deviation). Pour afficher seulement les populations moyennes (sans les effectifs), on peut ajouter loption nofreq. Loption swnmarize () nest pas seulement utile pour les variables continues, telles que les effectifs de population, les revenus, etc. Elle est aussi utile pour résumer les variables ordinales (voir exercice précédent) et aussi les variables dichotomiques. En effet, il faut savoir que la moyenne dune variable dichotomique est une proportion. Par exemple, pour connaître la proportion dÉtats à dominante active selon la région et le caractère dominant urbain ou rural, on exécutera: tabulate urbain region, summarize(actif) nostandard nofreq 3.2 Indroduction aux graphiques sous Stata Stata permet dobtenir rapidement une description des données, à laide de statistiques de distribution uni-, bi-, ou multivariée. En outre, Stata a aussi des capacitées visuelles importantes à exploiter lors de la description et de lexploration des données. La commande graphique de Stata produit huit types de graphiques (histogramme, bâton, trait, boîte, point, matrice, étoile, camembert) qui peuvent être combinés, par exemple comme ceci: En outre, on peut associer diverses courbes de lissage aux graphiques uni- et bivariés (densité de Kemel, méthode des intervalles, etc.). La combinaison des diverses techniques de représentations sur un même graphique permet de synthétiser les informations : graph pctact pcturb [fw=pop], twoway oneway box symbol((state]) connect(m) band(5) tlab rlab 3.2.1 Commande ppour les graphiques Pour ce qui concerne les options communes à tous les types de graphiques, la syntaxe de base de la commande graph est: graph [listvar] [,options spécifiques au type de graphique by(nonvar) total x/y/r/tlabel x/y/r/ttick x/y/r/tline x/y/rcale y/x/rlog symbol(s...s) connect(c...c) saving(nomfichier,[replace]) ] Les options communes concernent essentiellement la mise en forme du graphique: libellés (label), graduations (tick) , lignes (line) , échelle des axes (scale, log), symboles (symbol), liaison des points (connect). Nous navons fait figurer ici que les options les plus courantes. Pour une description des options avancées pour les titres, la taille des caractères, lépaisseur des traits et les couleurs, voir les exemples qui sont donnés dans le manuel de référence aux entrées graph titles, graph textsize, graph pens, graph shading. Les options spécifiques au type de graphique sont décrites dans les sections suivantes, ainsi que les commandes spécifiques qui sapparentent à la commande graph. 3.2.1.1 Les variables discrètes Graphiques de répartition discrète: barres, camemberts et étoiles La commande graph produit par défaut un histogramme lorsquune seule variable figure dans la liste des variables. Certaines options sont spécifiques aux histogrammes: Le graphique a sans doute plus dintérêt si lon croise deux variables discrètes avec loption by () après avoir trié le fichier selon la variable spécifiée (voir le chapitre Création et correction de variables pour la création de la variable urbain) : 3.2.1.2 Les variables continues histogrammes elles servent à representer visuellement la distribution dune variable quantitative que lon découpe en classes. boites à moustaches Pour visualiser les paramètres de position dune variable quantitative. La commande type est graph box x . Si on souhaite comparer la distritution de x dans les différentes sous-échantillon selon une variable qualitative, on ajoute loption by ou over (avec la variable de groupe entre parenthèses) à la commande de base . On obtient la structure suivante : graph box x, by(y) graph box x, over(y) nuages des points et droite dajustement ce type de graphique est utilisé pour le croisement de deux variables quantitatives. Pour la representation visuelle de lassociation entre deux variables quantitatives. La terminologie pour ce type de graphique est scatter. La synthaxe pour cette commande est graph scatter y x avec y la variable à placer en ordonnée et x la variable en abscisse Pour lajustement, on utilise la commande lfit x y avec lfit largument pour spécifier la droite dajustement sous forme linéaire. On peut aussi utiliser la commande lowess pour un ajustement sous forme de courbe. Note. Il est tout même possible de supperposer deux graphiques , à conditions que ces graphiques soit travé avec une même variabe en abscisse. La commande twoway est utilisée pour cette fin. La synthawe est la suivante : graph twoway (scatter x y) (lfit x y) dans le cas où on souhaiterait superposer le nuage des points des variables x, y et leur droite dajustement sur un seul graphique. Les graphiques de distribution ces graphiques sont utilisées lors que lon souhaite voir ka distribution dune variable , on que lon souhaite ajuster la distribution empirique , à une distribution théorique : normal, poisson, exponentielle, exponentielle négative, weibull ,  Kernel density et qnorm kdensity x , qnorm pour tester la distribution dune variable quantitative à la distribution typique dune variable suivant la loi normal. Le Q-Q plot Les graphiques multivariées En fait, les graphiques dits multivariés sont des superpositions, ou des alignements de graphiques univariés ou bivariés. Nous avons déjà vu comment faire de tels graphiques avec loption by (var) commune à de nombreuses commandes. Cette section est consacrée aux graphiques multivariés qui ne font pas appel à loption by. Loption matrix établit une sene de graphiques bivariés croisant chaque paire de variables énumérées: 3.2.1.3 La graph editor Cest une interface graphique qui permet de spécifier les éléments graphiques tels que les titres, les titres des axes, la légende,  "],["la-modélisation-avec-stata.html", "Chapter 4 La Modélisation avec Stata 4.1 Théorie dEstimation 4.2 Regression lineaire 4.3 regression Logistique", " Chapter 4 La Modélisation avec Stata 4.1 Théorie dEstimation 4.2 Regression lineaire Le modèle de régression linéaire simple est à la fois le modèle fondateur de tous les autres modèles de régression, le plus simple de tous ces modèles et le modèle qui offre le plus de variantes. Sa simplicité apparente est en fait tributaire de nombreuses hypothèses simplificatrices: lhistoire de ce modèle est une longue succession de tentatives pour lever ou minimiser ces hypothèses. En conséquence, un très grand nombre de procédures sont associées à ce modèle. Dans cette section, nous accorderons un intérêt tout particulier aux estimations robustes des coefficients de régression et de leur variance. En fin de section, nous aborderons le modèle de régression non linéaire (ou paramétrique). 4.2.1 La regression linéaire simple La commande de base pour la régression simple sécrit simplement: regress vardep varindep La variable dépendante doit obligatoirement se situer en début de liste, et elle est suivie des variables indépendantes. Ce principe vaut dailleurs pour toutes les procédures de régression. Les variables indépendantes peuvent être indifféremment continues ou discrètes. Dans le cas dune variable polytomique, on peut soi-même créer une série de variables dichotomiques à laide de loption gen( )de la commande tabulate (voir le chapitre Création et correction de variables) et éliminer la catégorie de référence : tabulate region, gen(reg) Mais il est beaucoup plus aisé de faire appel au préfixe xi qui crée automatiquement une série de variables dichotomiques à partir des variables marquées dun i. dans la commande: regress pctact pcturb i.region 4.2.2 Regression multiple La commande pour la regression linéaire multiple est la même que pour la greqsion linéaire simple à la diffrérence dune liste de plus dune variable indépendant-explicative. Nous avons la commande suivante : regress y x1 x2 x3 ... avec y la variable dépendante et xi les variables explicatives dans le modèle de regression multiple Problème classiques de la regression (simple et ou multiple) multicolinearité autocorelation des erreurs normalité des résidus 4.2.3 La régression multivariée La régression multivariée est en effet dun usage peu courant et sert essentiellement à faire des tests complexes. La régression multiple disponible dans Stata est dun usage délicat: elle distingue une équation principale et une équation secondaire dans la régression. Dans la régression multivariée, plusieurs variables dépendantes interviennent simultanément dans léquation pour un même ensemble de variables indépendantes: mvreg vardepl vardep2... : [varindep] [, corr ] 4.2.3.0.1 Regression non linéaire Rappelons que lhypothèse principale de la régression classique est que la relation entre la variable dépendante et les variables indépendantes est linéaire. Pour mieux se représenter limportance de cette hypothèse, on peut imaginer un espace où chaque point représente la position de chaque observation: la régression linéaire consiste à tracer une droite à travers le nuage formé par ces points, de telle manière à minimiser la distance entre cette droite et ces points. La fonction de régression non linéaire doit être définie dans un sous-programme écrit dans le langage de Stata : cette procédure sadresse bien évidemment aux utilisateurs avertis ayant une bonne connaissance des principes de programmation. Cependant, un certain nombre de fonctions courantes sont disponibles dans la version standard du logiciel, pour la régression sur une seule variable indépendante. La syntaxe de base de la régression non linéaire est: nl fonction vardep varindep Les fonctions courantes sont décrites dans le manuel de Stata. Il sagit des fonctions exponentielles à deux ou trois paramètres (exp2, exp2a et exp3), des fonctions logistiques et de Gompertz à trois ou quatre paramètres (log3 et log4, gom3 et gom4). 4.3 regression Logistique La regression logistique est un moddèle de regression à variable dépendante qualitative. Ces modèles sappliquent aux situations où certains individus ont une caractéristique que dautres nont pas. La modélisation a pour objectif de déterminer les facteurs qui peuvent expliquer la présence de cette caractéristique. En principe, le temps est considéré comme nul ou inopérant : comme dans le modèle de régression simple, le moment de lobservation est supposé unique (voir plus loin les modèles qui sinspirent du modèle logistique tout en tenant compte du temps). 4.3.1 Regresson logistique binoliale La variable à expliquer na que deux modalitées codées par des 0 ou des 1 (dichotomique) 4.3.2 Regression Logistique Multinomiale La variable à expliquer est polytomique mais non ordonnée 4.3.3 Regression Logistique Ordonné La variable à expliquer est polytomique et ordonnée "],["analyse-des-données-de-logitudinales.html", "Chapter 5 Analyse des données de Logitudinales 5.1 Introduction aux series temporelles 5.2 Données de Panel 5.3 Analyse de Survie", " Chapter 5 Analyse des données de Logitudinales 5.1 Introduction aux series temporelles 5.2 Données de Panel 5.3 Analyse de Survie "],["analyses-exploratioires.html", "Chapter 6 Analyses Exploratioires 6.1 ACP 6.2 AFC 6.3 ACM", " Chapter 6 Analyses Exploratioires 6.1 ACP 6.2 AFC 6.3 ACM "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
