[["index.html", "Stata-Support de formation About", " Stata-Support de formation Mulekya Schadra 2022-06-20 About Ce document est écrit comme support de formation dans le logiciel STATA. une formation rélisé pour le Docteur Franc Lutu. Nous ne prétendons pas aborder toutes les connaissances disponibles dans STATA, neanmoins nou proposons les compétences éssentieles dans les aspects danalyse des données. Nous nous basons sur la comprehension progressive. ce sont les bases qui determinent la comprehension des notions suivantes. ` ce livre est téléchargeable en format pdf ,sur le compte Github ci-sessous https://github.org/mulekya_schadra/. `Ce support est écrit dans le cadre dapprentissage du logiciel STATA, dans ce livre, les chapitres sont organisées de manière à inculter une certaine compétence dans lanalyse des donnes Ce cours est reparti dans 5 chapitres, concernat les aspects de base du logiciel avec hierarchie "],["pries-en-main-du-logiciel.html", "Chapter 1 Pries en main du logiciel 1.1 Présentation de linterface 1.2 Definition de lespace de travail 1.3 fenetres aditionnelles de Stata 1.4 importation de la base des données 1.5 Fichier do (do-file)", " Chapter 1 Pries en main du logiciel le logiciel est un programme de lentreprise staa utilisé dans le domaine de léconomie et de léconométrie dans le cadre danalyse des données. Ce logiciel est manipulable sous deux angles : Interface graphique ; Intgerface de commande cette aspect des chose rend le logiciel Stata fléxible quand aux éxigences du moment: la reproductibilité du travail dans l'analyse des données 1.1 Présentation de linterface Voici comment resemble linterface Stata à louverture du programme: Presentation de linterface Stata 4 fenetres principales dont : La visionneuse des resultats La partie Commande la Vue des variables Lhistorique des commandes exécutées. Le visionneuse des resultats sert à visualiser les résultats après exécution dune quelconque tâche dans le cadre du travail sous Stata La partie Commande est la partie où on entre du code dans la syntax appropriée à stata, et selon la tâche que lon souhaiterais éxécuter La partie vue des variables quand à elle, sert à montrer le nom des variables contenues dans la base des données et leurs caractéristiques tel que: le type des variables, leur format, les label. Les autres details sont affciché dans la fenêtre juste en bas: la partie propriété des variables La fênetre history quand à elle, sert montre lensemble des codes exécutées dans la sessions Stata dépuis le début du travail. à part ces interfaces, nous avons la base à outils et la bare des menus dans stata. Avec exécution que ce soit par lutilisation de lintrerface graphique ou de la partie commande, tout travail passe par linvité de commande. Stata étant un logiciel dédié à lanalyse des données nous allons passer direcetement par la partie qui consiste à charger une base des données dans le mémoire Stata: Importation. 1.2 Definition de lespace de travail En anglais working direcrorie est le dossier de lecture et décriture dun programme par défaut. Pour toute session de stata, le repertoire (directory) est les dossier mes documents. celui-ci est changé par la commande cd pour signifier change directorie et suivi du chemin daccès complet à ce repertoire. pour connaitre le chemin daccès ç un repertoire donnée, il suffit de se selectionner ce dossier et de faire menu contextuelle tout en appuyant le bouton shift du clavier et choisir loption copier en tant que chemin daccès et ensuite coller dans stata après le mot clé cd. # cd &quot;E:\\ MES CONSULTANCES\\Dr Franck\\Stata Learning&quot; pour spécifier le # dossier *Stata learning comme repoirtoire de travail pour la # session stata. Changer les *\\* en */*. Exemlple: cd \"E:/MES CONSULTANCES/Dr Franck/Stata Learning\" pour spécifier le dossier *Stata learning comme repoirtoire de travail pour la session stata. 1.3 fenetres aditionnelles de Stata Data editor / Data browser pour visualiser les données chargée dans la mémoire sous forme de tableau de manière à faciliter leurs lectures comme sil sagissait dun tableaur (excel par exemple). Data bowser est différent de data editor dans ce ses que ce premier permet de visualiser les données sans possibilité de modification, tandis que la le data editor quand à lui offre des possibilité de modification comme dans un tableur classique. Graph editor : pour visualiser les graphiques tracés dans stata, en permettant une certaine modification des élèments graphiques tel que le titre, le titre des axes, la vouleur des textes ,  Variable manager qui permmet de visualiser et même des modofier les propriétes des variables contenue dans la base des données stata help : pour voir laide sur différentes opérations sous stata Ainsi donc, les points 1,2 et 4 font parti des fenêtres du type viewer dans stata. 1.4 importation de la base des données Stata offre plusieures possibilitées de lire les bases des données provenant de plusieures sources externes sont excel, spss, sas,csv, . lextention des bases des données propre à stata sont les fichiers .dta. pour importer une base des données sous stata, il faut utiliser la fonctiuon reab avec lextention du fichier. pour un fichier excel: read_excel avec le chemin daccès complet du fichier, écrit sous forme de caractète . pour un fichier spss, la comande a comme mot clé read_spss ainsi de suite Dans le cadre de ce cours nous allons plus utiliser les fichiers venant de lexcel. Ainsi donc, nous exploiterons plus la fonction read_excel et les différents arguments qui viennent avec. Specifier la feuille qui contient nos données spécifier les noms des variables à la première ligne ou pas spécifier si toutes les données sont importées comme des chaines des caractères ou pas. 1.5 Fichier do (do-file) Le dofile est est dichier dans lequel sont stockés les différentes commandes des stata, que lon pourra exécuter plus tard , au besoin, pour des raisons de continuité et de reproductibilité du travail danalyse des données. Notons que kon peut choisir dutiliser stata par son interface graphique que par sa partie commande. "],["data-cleaning.html", "Chapter 2 Data CLeaning 2.1 Introduction 2.2 Les commandes de base", " Chapter 2 Data CLeaning 2.1 Introduction Pourquoi manipuler les données en Stata et pas en Excel ? La raison est simple : pas mal des commandes que lon va voir ci-dessous existent aussi en Excel et sont certes quelquefois plus simples (si on arrive à les trouver), mais par contre on perd vite le fil de ce que lon a fait subir aux données avant de passer à lestimation, et cest parfois là que se cachent soit les quelques erreurs à lorigine de résultats grotesques soit, au contraire, les mauvais traitements infligés aux chiffres pour obtenir le résultat désiré. Avec Stata, on peut garder la trace de toutes les manipulations dans le do-file. Celui-ci doit contenir toutes les commandes permettant de passer du fichier-données brut à celui qui est prêt à lestimation. Il est alors facile de retrouver lerreur qui tue ou bien de vérifier ce que les chiffres ont subi entre les mains du bourreau avant davouer. La manipulation des données sous stata consiste à Typage des variable remplaceme nt des valeurs manquantes remplacement de certaines variables sous certaines conditions codification des variable recodage des variables Ainsi, dans uune base des donénes, avant de commencer le nettoyage de la base des donnée sil surffit davoir une vue gloobale sur cette base en conaissant les caractéristiques générales de différnetes variables contenues dans la base des données. Ainsi, nous utilisons les commandes suivantes : describe : permet de décrire toutes les variables de la base des données chargée en mémoire. il nous amène en sortie: le nombre des observation, le nombre des variables, les noms des variables , les labeks et les types de chaque variable sous forme de tableau. //Avec les options short pour affichier le nom des variables, simple pour affcicher le nombre des variables et le nombre dobservations dans la BD. codebook pour voir les différentes ecaractéristiques des variables dans la base des données. utiliser codebook suivi du nom de la variable pour ne voir que les caractéristiques dune seule variable ou une liste des variables. Visualisation de la BD sous forme de tableau browse pour affcicher uniquement; edit pour pouvoir modifier manuellement les valeurs dans la base. 2.2 Les commandes de base 2.2.1 La synthaxe des commandes stata Stata comme tous les logiciels, utilise un langage qui nest ni de langlais, ni du français, mais son propre langage. Certes, les mots sont empruntés à la langue de Shakespeare, mais la syntaxe na rien à voir avec langlais. Hormis quelques exceptions, la syntaxe des commandes de Stata est: [by listevar:] commande [listevar] [=exp] [if exp] [in intervalle] [pondération] [, options] Le nom de la commande est évidemment obligatoire, et il peut éventuellement être précédé dun préfixe by, et le plus souvent il est suivi dun ou de plusieurs suffixes. Dans le cas de commandes particulièrement usuelles, il peut parfois être abrégé, comme par exemple d pour describe. Les suffixes sont entourés de crochets pour indiquer leur caractère optionnel: listevar correspond à une liste de variables, exp à une expression logique, intervalle à une série dobservations dans le fichier de données, et pondéra t i on à une expression indiquant la variable et le mode de pondération des données. Enfin, après une virgule, on peut ajouter une ou plusieurs options pour lexécution de la commande. La syntaxe complète pour chaque commande figure dans les manuels de référence de Stata, qui restent de ce point de vue irremplaçables. Mais puisque le préfixe by et les suffixes if, in et la pondération sont communs à la majorité des commandes, nous nous en tiendrons dans les chapitres suivants à exposer la syntaxe de base qui prend la forme: . commande [listevar] [=exp] [, options] Immédiatement après le nom de la commande, une liste de variables indique sur quelles variables doit seffectuer la commande. Pour explorer le fichier « census.dta », on tapera: list state region pop Le préfixe by permet dexécuter la commande pour chaque sous-ensemble dobservations défini pour chaque valeur de listevar. Avant dexécuter la commande, le fichier doit dabord être trié (avec la commande sort listevar) selon la même variable utilisée par le préfixe by. Par exemple, on aura: Le suffixe [in intervalle] Le suffixe in est moins courant dans la pratique, car il suppose de bien connaître lordre dans lequel sont classées les observations du fichier. TI permet dexécuter la commande pour certaines observations, par exemple: # sort region # by region: list region state pop medage Le suffixe [if exp] Le suffixe if restreint lexécution de la commande au sousensemble des observations pour lesquelles lexpression logique exp est vraie, cest-à-dire différente de la valeur O. Nous reviendrons dans la section consacrée aux calculs sur la manipulation de ces expressions logiques, dites encore booléennes. Pour lheure, un exemple suffit à comprendre le fonctionnement de ce suffixe: On préférera toujours sélectionner un sous-ensemble d'observation avec le suffixe if en fonction de variables bien connues et qui font sens, plutôt que de se fier à un ordre arbitraire des observations dans le fichier. 2.2.2 Les commandes de depart import : charger la base des donnes dans la mémoire. Suivi de type des fichier. et le chemin daccès du fichier clear vide la mémoire use au lieu de mettre tout le sentier. Ne pas oublier de mettre les guillemets comme ils sont (noter le sens !). save La commande save datafile1.dta est très importante : elle sauvegarde le fichier-données (.dta) modifié par le programme sous un autre nom que le fichier initial, ce qui permet de laisser ce dernier intouché. Sinon on altère le fichier initial de façon permanente, ce qui est en général un désastre. - De façon générale, les guillemets (comme dans cd c:/path/directory) sont obligatoires quand les noms spécifiés ne sont pas liés en un seul mot ; par exemple, Stata comprend use le nom que je veux.dta mais pas use le nom que je veux.dta. Describe pour decrire la base des données 2.2.3 Creation et correction des variables Les commandes generate et replace La commande generate crée de nouvelles variables. Elle a la syntaxe de base suivante: [by listevar:] generate var = exp[if exp] [in intervalle] La commande replace utilise la même syntaxe, sauf quelle sapplique aux variables déjà existantes. Comme on le voit, cette syntaxe est simple, ce qui nest pas le cas de la forme que peut prendre exp. La première expression exp (après le signe =) spécifie le contenu de la variable, cest-àdire le plus souvent une valeur numérique. La seconde expression exp (après if) doit être formulée comme une expression logique dont le résultat est soit vrai soit faux: la création (ou le remplacement) de la variable est restreint aux observations pour lesquelles le résultat de lexpression est vrai. Cela na lair de rien, mais la confusion entre les deux expressions est certainement lerreur la plus fréquente que peuvent faire les utilisateurs de Stata. Les opérateurs Les opérateurs arithmétiques de Stata sont bien classiques: + (addition), - (soustraction), * (multiplication), 1 (division), A (puissance), tout comme les opérateurs relationnels &gt; (supérieur), &lt; (inférieur), &gt;= (supérieur ou égal), &lt;= (inférieur ou égal). Cest peut-être moins le cas des opérateurs relationnels == (égal) ou -= (différent, que lon peut écrire aussi! =), et des opérateurs logique &amp;. (et), 1 (ou bien), et - (non). En effet, Stata distingue le signe = (affectation dune valeur) du signe == (égalité entre deux valeurs). Dans le cas dune affectation dune valeur à une variable, la variable apparaît à gauche du signe = tandis que la valeur affectée apparaît à droite: Les expressions logiques dans R Les expressions logiques sont particulièrement utiles pour créer des variables dichotomiques, cest-à-dire qui ne prennent que deux valeurs, 0 et 1. En effet, une expression logique, cest-àdire une expression où interviennent les opérateurs relationnels &gt;, &lt;, &gt;=, &lt;=, ==, -=, !=, ou bien les opérateurs logiques &amp;., 1, et -, est codée 1 lorsque son résultat est vrai, et codée 0 lorsque son résultat est faux. La commande tabulate possède une option generate ( ) bien pratique pour créer une série de variables dichotomiques à partir dune variable polytomique. Exécutez la série de commandes: La commande drop et la commande keep "],["analyse-univarié-bivariée-et-graphiques.html", "Chapter 3 Analyse Univarié, Bivariée et Graphiques 3.1 Tableaux croisés à deux variables", " Chapter 3 Analyse Univarié, Bivariée et Graphiques Avant de mener des analyses à laide de modèle de régression et autres statistiques complexes, il est préférable de tirer le maximum de lexploration des données et de statistiques simples. Cela a deux avantages: permettre de mieux connaître les données et donc de repérer leurs particularités et leurs éventuelles incohérences, ce qui pourra servir pour des analyses statistiques plus approfondies; permettre de sélectionner des indices et des graphiques simples qui rendent le mieux compte des données afin de les restituer à un large public: les connaissances en statistique de la plupart des mortels ne dépassent guère le pourcentage, et de toute façon, même un public de spécialistes ne retiendra en définitive que les indices et les graphiques les plus simples. Stata offre de nombreuses commandes pour lanalyse exploratoire des données, autant sous forme de tableaux que de graphiques. Comme dans les chapitres précédents, nous utiliserons le fichier « census.dta » pour illustrer ces commandes. La commande codebook permet de faire le tri à plat de la base des données en montrant les sttatisques simples et univariées. Et montre toute les informations nécéssaires à la compréhention de la structure dune variable. La commande summarize listvar permet aussi de résumer la distribution, en particulier pour les variables numériques continues. Cela naurait pas grand sens, par exemple, de calculer la moyenne dune variable discrète. Loption detail pennet une description plus precIse des variables continues, incluant les pourcentiles, les quatre plus grandes (Largest) et plus basses (Smallest) valeurs, ainsi quun indice de dissymétrie (la valeur de Skewness est °pour la distribution nonnale) et de concentration (la valeur de Kurtosis est de 3 pour la distribution normale. À linverse de la commande swmnarize, la commande tabulate est utile pour les variables discrètes. On remarque avec loption nolabel (pour afficher les codes plutôt que les libellés), que les régions sont classées selon leur numéro de code: 3.1 Tableaux croisés à deux variables La commande tabulate devient vraiment intéressante pour croiser les distributions de deux variables discrètes. La syntaxe de base de cette commande est: tabulate varligne varcol[, cell column row missing nofreq wrap nolabel ~ll chi2 exact gamma lrchi2 iaub v] Les modalités de la première variable citée figurent en ligne, tandis que les modalités de la deuxième apparaissent en colonne. Des options permettent dobtenir les pourcentages en ligne (row) , en colonne (column) ou par cellule (cell) du tableau: Pour afficher les pourcentages sans les fréquences, on utilisera loption nofreq : 3.1.1 Tableaux croisés à trois variables ou plus "],["la-modélisation-avec-stata.html", "Chapter 4 La Modélisation avec Stata 4.1 Théorie dEstimation 4.2 Regtession lineaire 4.3 regression Logistique 4.4 Regression Logistique Ordonné", " Chapter 4 La Modélisation avec Stata 4.1 Théorie dEstimation 4.2 Regtession lineaire 4.3 regression Logistique 4.3.1 Regresson logistique binoliale 4.3.2 Regression Logistique Multinomiale 4.4 Regression Logistique Ordonné "],["analyse-des-données-de-logitudinales.html", "Chapter 5 Analyse des données de Logitudinales 5.1 Introduction aux series temporelles 5.2 Données de Panel 5.3 Analyse de Survie", " Chapter 5 Analyse des données de Logitudinales 5.1 Introduction aux series temporelles 5.2 Données de Panel 5.3 Analyse de Survie "],["analyses-exploratioires.html", "Chapter 6 Analyses Exploratioires 6.1 ACP 6.2 AFC 6.3 ACM", " Chapter 6 Analyses Exploratioires 6.1 ACP 6.2 AFC 6.3 ACM "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
